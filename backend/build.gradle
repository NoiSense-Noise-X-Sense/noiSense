plugins {
  id 'com.github.node-gradle.node' version '7.0.2'
  id 'java'
  id 'org.springframework.boot' version '3.5.3'
  id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.dosion.noisense'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
  runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'

  implementation 'org.postgresql:postgresql'
  implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0" //swagger

  implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
  implementation 'org.springframework.boot:spring-boot-starter-security'

  implementation 'org.springframework.data:spring-data-elasticsearch:5.1.0'
  implementation 'co.elastic.clients:elasticsearch-java:8.12.0'

  // OAuth2
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'

  // 게시판 정렬
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

  // api하면서 필요했던 것들
  implementation 'org.json:json:20231013'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'


  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

//  Mock Test
  testImplementation 'org.postgresql:postgresql:42.7.3'
  testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.19.0'
  testImplementation 'org.mockito:mockito-core:5.11.0'
  testImplementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
  // 인증 우회 시 사용
  testImplementation 'org.springframework.security:spring-security-test'

  // 배치
  implementation 'org.springframework.boot:spring-boot-starter-batch'
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

tasks.named('test') {
  useJUnitPlatform()
}

tasks.register("prepareKotlinBuildScriptModel"){}

bootRun {
  mainClass.set('com.dosion.noisense.BackendApplication')
}
