plugins {
  id 'com.github.node-gradle.node' version '7.0.2'
  id 'java'
  id 'org.springframework.boot' version '3.5.3'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'application'
}

group = 'com.dosion.noisense'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}


application { // 빌드 시점용 설정
  mainClass = 'com.dosion.noisense.BackendApplication'
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}


// QueryDSL 설정 추가
def querydslDir = layout.buildDirectory.dir("generated/querydsl")

sourceSets {
  main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
  options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
  delete(file(querydslDir))
}
// QueryDsl 설정 끝


repositories {
  mavenCentral()
  maven {
    url "https://repo.osgeo.org/repository/release/"
  }
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
  runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'

  implementation 'org.postgresql:postgresql'
  implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0" //swagger

  implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
  implementation 'org.springframework.boot:spring-boot-starter-security'

  implementation 'org.springframework.data:spring-data-elasticsearch:5.1.0'
  implementation 'co.elastic.clients:elasticsearch-java:8.12.0'

  // OAuth2
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'

  // 게시판 정렬
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

  // queryDsl
  implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
  annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
  annotationProcessor "jakarta.annotation:jakarta.annotation-api"
  annotationProcessor "jakarta.persistence:jakarta.persistence-api"

  // api하면서 필요했던 것들
  implementation 'org.json:json:20231013'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

  // 인증 우회 시 사용
  testImplementation 'org.springframework.security:spring-security-test'

  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

  // 좌표계 변환 시 사용
  testImplementation("org.geotools:gt-referencing:33.2") {
    exclude(group: "javax.media", module: "jai_core")
  }
  testImplementation 'org.locationtech.jts:jts-core:1.20.0' // Geometry 연산용

  implementation 'org.springframework.boot:spring-boot-starter-batch' // 배치
}


tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

tasks.named('test') {
  useJUnitPlatform()
}

tasks.register("prepareKotlinBuildScriptModel") {}

bootRun { // 개발 서버 실행 시 사용
  mainClass.set('com.dosion.noisense.BackendApplication')
}
