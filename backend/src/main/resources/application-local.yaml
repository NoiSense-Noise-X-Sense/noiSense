# local 환경 설정
spring:
  config:
    activate:
      on-profile: local
  docker:
    compose:
      enabled: false

  datasource:
    url: jdbc:postgresql://${SPRING_DATASOURCE_URL}:${SPRING_DATASOURCE_PORT}/noisense
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  data:
    redis:
      host:  ${REDIS_HOST:localhost}
      port: 6379


  # JPA
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        naming:
          physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        format_sql: true
#        show_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        # jdbc batch size 설정
        jdbc:
          batch_size: 500
#    show_sql: true


  # batch
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false

# 로깅
logging:
  level:
    root: INFO
    org.springframework.web: DEBUG

---




jwt:
  accessTokenExpirationTime: 1000000
  refreshTokenExpirationTime: 86400000
  secretKey: ${JWT_SECRET_KEY}


# OAuth2 설정 예시 (공통 또는 프로파일별로 나눠도 됨)
# 우선 미사용 처리
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            scope:
              - profile
              - email
            authorization-grant-type: authorization_code
            client-name: Google
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
            client-name: Kakao
        provider:
          google:
            authorization-uri: "https://accounts.google.com/o/oauth2/v2/auth"
            token-uri: "https://oauth2.googleapis.com/token"
            user-info-uri: "https://openidconnect.googleapis.com/v1/userinfo"
            user-name-attribute: sub
          kakao:
            authorization-uri: "https://kauth.kakao.com/oauth/authorize"
            token-uri: "https://kauth.kakao.com/oauth/token"
            user-info-uri: "https://kapi.kakao.com/v2/user/me"
            user-name-attribute: id
